version: '3'
services:
  proxy:
    build:
      context: ./
      dockerfile: nginx.Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - rest
      - main_page
      - participate_page
      - crew_page
      - rest_static
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    logging:
      options:
       max-size: "1g"
  participate_page:
    build:
      context: ../../
      dockerfile: fullstack/phoenix-development/nodejs.Dockerfile
    environment:
      BASE_URL: "http://api.dev.phoenixlan.no:3000"
      HOST: "http://delta.dev.phoenixlan.no:3000"
      REACT_APP_OAUTH_CLIENT_ID: "phoenix-delta-dev"
      REACT_APP_MAIN_SITE: "http://dev.phoenixlan.no:3000"
    env_file: .participate_env
    entrypoint:
      - bash
      - "-c"
      - "cd ../phoenixjs && yarn link && cd ../phoenix && yarn link @phoenixlan/phoenix.js && yarn && yarn start"
    volumes:
      - ../../phoenixparticipate-v1:/srv/phoenix
      - ../../phoenixjs:/srv/phoenixjs
    logging:
      options:
       max-size: "1g"
  main_page:
    build:
      context: ../../
      dockerfile: fullstack/phoenix-development/nodejs.Dockerfile
    ports:
      - 35729:35729
    volumes:
      - ../../phoenixmain-v1:/srv/phoenix
    logging:
      options:
       max-size: "1g"
  rest_static:
    build:
      context: ../../
      dockerfile: fullstack/phoenix-development/nodejs.Dockerfile
    volumes:
      - ../../phoenixapi-v1/staticContent:/srv/phoenix
    logging:
      options:
       max-size: "1g"
  mail_worker:
    build:
      context: ../../rabbitmqMailWorker/
      dockerfile: docker/development/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file: 
      - .rabbitmq_env
      - .mailgun_env
    environment:
      RABBITMQ_LISTEN_TOPIC: email
    volumes:
      - ../../phoenixmailservice-v1/phoenixMailService:/srv/phoenixMailService/phoenixMailService
    logging:
      options:
       max-size: "1g"
  rest:
    build:
      context: ../../phoenixapi-v1/
      dockerfile: docker/development/Dockerfile
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file: 
      - .env
      - .db_env
      - .rabbitmq_env
      - .mailgun_env
    environment:
      DEBUG: "yes"
    volumes:
      - ../../phoenixapi-v1/phoenixRest:/srv/phoenixRest/phoenixRest
      - ../../phoenixapi-v1/alembic:/srv/phoenixRest/alembic
      - ./files:/files
    logging:
      options:
       max-size: "1g"
  crew_page:
    build:
      context: ../../
      dockerfile: fullstack/phoenix-development/nodejs.Dockerfile
    entrypoint:
      - bash
      - "-c"
      - "cd ../phoenixjs && yarn link && cd ../phoenix && yarn link @phoenixlan/phoenix.js && yarn && yarn start"
    volumes:
      - ../../phoenixcrew-v1:/srv/phoenix
      - ../../phoenixjs:/srv/phoenixjs
    logging:
      options:
       max-size: "1g"
  db:
    image: postgres:alpine
    env_file: .db_env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=phoenix"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      options:
       max-size: "1g"
  rabbitmq:
    image: rabbitmq:alpine
    env_file: .rabbitmq_env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 30s
      retries: 3
    logging:
      options:
        max-size: "1g"
  adminer:
    depends_on:
      - db
    image: adminer
    ports:
      - 3739:8080
    logging:
      options:
       max-size: "1g"
